# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: cjoao-de <cjoao-de@student.42lisboa.com    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/10/06 12:12:04 by cjoao-de          #+#    #+#              #
#    Updated: 2024/11/06 12:49:20 by cjoao-de         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #


# Project files
# SRC = black3.c	black4.c	black11.c	wiredemo.c
SRCS_PATH			=	srcs/
SRC				=	$(wildcard $(SRCS_PATH)*.c) $(wildcard $(SRCS_PATH)*/*.c)

OBJ_DIR = object/
# OBJ = $(SRC:$(SRC_DIR)%.c=$(OBJ_DIR)%.o)
OBJ =	$(patsubst %.c, $(OBJ_DIR)%.o, $(notdir $(SRC)))

INCLUDES =	-I includes/ -I lib/libft/include/ -I lib/mlx_linux/
LIBFT_DIR = ../../lib/libft/
LIBFT = $(LIBFT_DIR)libft.a
MLX_DIR =	../../lib/mlx_linux/
MLX =	$(MLX_DIR)libmlx_Linux.a
INC_LIB = ./lib/

LDFLAGS = -L$(LIBFT_DIR) -lft -L$(MLX_DIR) -lmlx -lXext -lX11 -lm
INCLUDES =	-I ../../includes/ -I ../../lib/libft/include/ -I ../../lib/mlx_linux/
# Project settings
NAME = black
CFLAGS = $(INCLUDES)
# CFLAGS = -Wall -Wextra -Werror
# CFLAGS = -Wall -Wextra -Werror -I${LIBFT_DIR} #-O3
debug: CFLAGS += -g3 #-Og #-fPIE #-fsanitize=address #-pg
MAKEFLAGS += --no-print-directory #  --silent
.SILENT: $(OBJ) $(NAME) clean fclean
ARFLAGS = rvs
RM = rm -rf
CC = cc
# ifeq ($(shell hostname), fedora)
# 	CC = clang
# endif
# HOST=$(shell hostname)
# AR = ar

all: $(NAME)

libft: $(LIBFT)

.: fclean $(NAME)

$(LIBFT):
	@make -C $(LIBFT_DIR)

$(NAME): $(OBJ)
	@printf "$(YELLOW)** compiling **      "$(NAME)"$(RST)\n"
	$(CC) $(CFLAGS)  -o $(NAME) $(OBJ) $(LDFLAGS)
	@printf "$(GREEN_B)$(NAME) created\n$(RST)"

$(OBJ_DIR)%.o: $(SRC_DIR)%.c
	@mkdir -p $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@printf "$(CYAN_I)** compiling **      "$<"$(RST)\n"
	$(CC) $(CFLAGS) $(INC_DIR) -c $< -o $@

debug: clean $(OBJ)
	@printf "$(YELLOW)"
	$(CC) $(CFLAGS) -o $(NAME) $(OBJ) $(LDFLAGS)
	@printf "$(RST)$(GREEN_B)[Debug version created]\n$(RST)"

clean:
	$(RM) $(OBJ_DIR)
	@printf "$(RED)[All $(NAME) objects deleted]    $(RST)\n"

fclean: clean
	$(RM) $(NAME)
	@printf "$(RED)[All binaries deleted]    $(RST)\n"

lcount:
	@printf "$(NAME) has $(BLUE_U)$(shell cat $(SRC) | wc -l)$(RST) lines of code\n"
	@printf "There are $(BLUE_U)$(shell cat $(SRC) | grep if | wc -l) if $(RST)statements, and $(BLUE_U)$(shell cat $(SRC) | grep while | wc -l) while$(RST) loops\n"

re: fclean all
