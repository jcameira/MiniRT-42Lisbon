<?xml version="1.0"?>
<analyzerinfo hash="5863650640555118911">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;libft.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;libft.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mlx.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mlx.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mlx_int.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mlx_int.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="28" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;obj&apos; can be reduced." verbose="The scope of the variable &apos;obj&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="70" column="12"/>
            <symbol>obj</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;content&apos; can be declared as pointer to const" verbose="Variable &apos;content&apos; can be declared as pointer to const" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="17" column="12" info="Variable &apos;content&apos; can be declared as pointer to const"/>
            <symbol>content</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;content&apos; can be declared as pointer to const" verbose="Variable &apos;content&apos; can be declared as pointer to const" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="31" column="12" info="Variable &apos;content&apos; can be declared as pointer to const"/>
            <symbol>content</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;content&apos; can be declared as pointer to const" verbose="Variable &apos;content&apos; can be declared as pointer to const" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="43" column="12" info="Variable &apos;content&apos; can be declared as pointer to const"/>
            <symbol>content</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;content&apos; can be declared as pointer to const" verbose="Variable &apos;content&apos; can be declared as pointer to const" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="56" column="12" info="Variable &apos;content&apos; can be declared as pointer to const"/>
            <symbol>content</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;obj&apos; can be declared as pointer to const" verbose="Variable &apos;obj&apos; can be declared as pointer to const" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="70" column="12" info="Variable &apos;obj&apos; can be declared as pointer to const"/>
            <symbol>obj</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;p&apos; can be declared as const array" verbose="Parameter &apos;p&apos; can be declared as const array" cwe="398" file0="srcs/debug.c">
            <location file="srcs/debug.c" line="100" column="24" info="Parameter &apos;p&apos; can be declared as const array"/>
            <symbol>p</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/kajo/42/miniRT/includes/minirt.h:184:11" call-funcname="object_content" call-argnr="1" file="srcs/debug.c" line="19" col="12" my-id="/home/kajo/42/miniRT/includes/debug.h:18:6" my-argnr="1"/>
<function-call call-id="/home/kajo/42/miniRT/includes/minirt.h:184:11" call-funcname="object_content" call-argnr="1" file="srcs/debug.c" line="33" col="12" my-id="/home/kajo/42/miniRT/includes/debug.h:17:6" my-argnr="1"/>
<function-call call-id="/home/kajo/42/miniRT/includes/minirt.h:184:11" call-funcname="object_content" call-argnr="1" file="srcs/debug.c" line="45" col="12" my-id="/home/kajo/42/miniRT/includes/debug.h:19:6" my-argnr="1"/>
<function-call call-id="/home/kajo/42/miniRT/includes/minirt.h:184:11" call-funcname="object_content" call-argnr="1" file="srcs/debug.c" line="58" col="12" my-id="/home/kajo/42/miniRT/includes/debug.h:20:6" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <array-index>
    <unsafe-usage my-id="/home/kajo/42/miniRT/includes/debug.h:21:6" my-argnr="1" my-argname="p" file="srcs/debug.c" line="102" col="22" value="0"/>
    </array-index>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/kajo/42/miniRT/includes/debug.h:21:6" my-argnr="1" my-argname="p" file="srcs/debug.c" line="102" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/kajo/42/miniRT/includes/debug.h:21:6" my-argnr="1" my-argname="p" file="srcs/debug.c" line="102" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="srcs/debug.c" functionName="print_sphere" lineNumber="15"/>
    <functiondecl file="srcs/debug.c" functionName="print_plane" lineNumber="29"/>
    <functiondecl file="srcs/debug.c" functionName="print_cylinder" lineNumber="41"/>
    <functiondecl file="srcs/debug.c" functionName="print_quadrilateral" lineNumber="54"/>
    <functiondecl file="srcs/debug.c" functionName="print_parsed_elements" lineNumber="67"/>
    <functiondecl file="srcs/debug.c" functionName="print_point" lineNumber="100"/>
    <functioncall functionName="ft_dprintf"/>
    <functioncall functionName="light_content"/>
    <functioncall functionName="object_content"/>
    <functioncall functionName="object_type"/>
    <functioncall functionName="print"/>
    <functioncall functionName="printf"/>
  </FileInfo>
</analyzerinfo>
