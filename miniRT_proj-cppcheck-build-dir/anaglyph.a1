<?xml version="1.0"?>
<analyzerinfo hash="3901342162627334170">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;libft.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;libft.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mlx.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mlx.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mlx_int.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mlx_int.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="/home/kajo/42/miniRT/includes/minirt.h" line="28" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c">
            <location file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c">
            <location file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="53" column="7"/>
            <symbol>x</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src&apos; can be declared as pointer to const" verbose="Variable &apos;src&apos; can be declared as pointer to const" cwe="398" file0="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c">
            <location file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="29" column="16" info="Variable &apos;src&apos; can be declared as pointer to const"/>
            <symbol>src</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;red_ptr&apos; can be declared as pointer to const" verbose="Variable &apos;red_ptr&apos; can be declared as pointer to const" cwe="398" file0="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c">
            <location file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="83" column="16" info="Variable &apos;red_ptr&apos; can be declared as pointer to const"/>
            <symbol>red_ptr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;cyan_ptr&apos; can be declared as pointer to const" verbose="Variable &apos;cyan_ptr&apos; can be declared as pointer to const" cwe="398" file0="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c">
            <location file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="84" column="16" info="Variable &apos;cyan_ptr&apos; can be declared as pointer to const"/>
            <symbol>cyan_ptr</symbol>
        </error>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/kajo/42/miniRT/includes/minirt.h:99:7" my-argnr="1" my-argname="s" file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="88" col="20" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/kajo/42/miniRT/includes/minirt.h:99:7" my-argnr="1" my-argname="s" file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" line="88" col="20" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" functionName="create_left_right" lineNumber="26"/>
    <functiondecl file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" functionName="apply_depth_shift" lineNumber="50"/>
    <functiondecl file="/home/kajo/42/miniRT/srcs/anaglyph/anaglyph.c" functionName="create_anaglyph" lineNumber="79"/>
    <functioncall functionName="apply_depth_shift"/>
    <functioncall functionName="create_left_right"/>
    <functioncall functionName="dup_image"/>
    <functioncall functionName="free"/>
    <functioncall functionName="ft_calloc"/>
    <functioncall functionName="ft_memmove"/>
  </FileInfo>
</analyzerinfo>
